#include <iostream>
#include <cstdlib>

using namespace std;

//1. Указатели

int main1()
{
    int a = 5;
    int b = 12;

    int* ptr1;
    // int* - это тип переменной, означающий, что переменная
    // хранит в себе адрес ячейки памяти, в которой хранится
    // целое(int) чисто
    // int* - это указатель

    ptr1 = &a;
    // присваиваем переменной "ptr1" АДРЕС ячейки
    // памяти, соответствующей  переменной "a"
    // "&" - операция извлечения адреса

    cout << "ptr1=" << ptr1 << endl;
    //выведет на экран какое-то целое число

    cout << "*ptr1=" << *ptr1 << endl;
    // выведет значение переменной "a"
    // "*" - операция разыменования указателя, то есть
    // получения значения, хранящегося в той ячейке,
    // на которую указатель указывает
    // (адрес которой хранит указатель)

    // семантика символа "*" в выражении "int* ptr1" и
    // в выражении "*ptr1" ПРИНЦИПИАЛЬНО ОТЛИЧАЕТСЯ!

    *ptr1 = 7;
    // помещение в ячейку, на которую указывает указатель "ptr1",
    // значения 7
    // данная операция изменяет значение переменной "a",
    // хотя сама переменная "a" в этом операции формально
    // не участвует

    cout << "a=" << a << endl; //выведет 7

    ptr1 = &b;
    // присваиваем переменной "ptr1" АДРЕС ячейки
    // памяти, соответствующей переменной "b"
    // фактически мы отвязываем "ptr1" от переменной "a" и
    // привязываем к переменной "b"

    cout << "*ptr1=" << *ptr1 << endl;
    // выведет значение переменной "b"


    return 0;
}

//2. Указатели и массивы

int main2()
{
    const unsigned int size = 5;

    float A[size] = {5.2, 6.7, 1.8, 2.4, -9.0};
    // имя массива - это указатель!

    cout << "*A=" << *A << endl; //выведет 5.2

    float* ptr = A; //присвоение "ptr" значения переменной "A"
    // операция "&" не используется, так как A само по себе
    // является указателем

    cout << "*ptr=" << *ptr << endl; //выведет 5.2

    cout << "ptr+1=" << ptr + 1 << endl;
    //выведет адрес второго элемента массива

    cout << "*(ptr+1)=" << *(ptr + 1) << endl; //выведет 6.7
    cout << "ptr[1]=" << ptr[1] << endl; //выведет 6.7

    // *(ptr+i) и ptr[i] - эквивалентны


    //вывод всех элементов массива
    for (int i = 0; i < size; i++)
    {
        cout << *(ptr + i) << " ";
    }

    cout << endl;

    return 0;
}


