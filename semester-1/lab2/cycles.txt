#include <stdlib.h>
#include <iostream>

using namespace std;

/*
 * Вывод на экран десяти членов арифметической прогрессии
 * случай 1
 */
int main()
{
    //Задаем параметры прогрессии
    int a1 = 4;
    int d = 3;

    //задаем переменную для хранения i-го члена прогрессии
    int ai;

    //Количество элементов
    int n = 10;

    //Получаем и выводим на экран десять членов арифметической прогрессии
    ai = a1;
    cout << ai << endl;

    ai = a1 + d;
    cout << ai << endl;

    ai = a1 + 2 * d;
    cout << ai << endl;

    ai = a1 + 3 * d;
    cout << ai << endl;

    ai = a1 + 4 * d;
    cout << ai << endl;

    ai = a1 + 5 * d;
    cout << ai << endl;

    ai = a1 + 6 * d;
    cout << ai << endl;

    ai = a1 + 7 * d;
    cout << ai << endl;

    ai = a1 + 8 * d;
    cout << ai << endl;

    ai = a1 + 9 * d;
    cout << ai << endl;

    //Долго и неудобно

    return 0;
}

/*
 * Случай 2. Приводим к виду, когда программный код повторяется,
 *  то есть к рекурентному виду, когда значение переменных на следующем этапе
 * зависят от значений переменных на предыдущем этапе
 */

int main()
{
    int a1 = 4;
    int d = 3;

    int ai;
    int n = 10;

    ai = a1;
    cout << ai << endl;

    ai = ai + d;
    cout << ai << endl;

    ai = ai + d;
    cout << ai << endl;

    ai = ai + d;
    cout << ai << endl;

    ai = ai + d;
    cout << ai << endl;

    ai = ai + d;
    cout << ai << endl;

    ai = ai + d;
    cout << ai << endl;

    ai = ai + d;
    cout << ai << endl;

    ai = ai + d;
    cout << ai << endl;

    ai = ai + d;
    cout << ai << endl;

    //Код повторяется, это удобнее, по крайней мере тем что его можно
    //копировать - вставить

    return 0;
}

/*
 * Случай 3. заменяем повторяющийся код циклом
 */
int main()
{
    int a1 = 4;
    int d = 3;

    int ai;
    int n = 10;

    ai = a1;
    /*
     * Вводим дополниткльную перменную - номер текущей итерации,
     * то есть какой по номеру раз исполняется тело цикла
     */
    int i = 0;

    while (i < n) //сравниваем не превысило ли число итераций максимальное
    {
        cout << ai << endl;
        ai = ai + d;
        i = i + 1; // увеличиваем номер итерации на один
    }
    //как только условие престанет выполняться цикл прекратится и выполнение
    //перейдет к следующему за циклом оператору


    return 0;
}

/*
 * Случай 4. цикл for
 */
int main()
{
    int a1 = 4;
    int d = 3;

    int ai;
    int n = 10;

    ai = a1;

    //замена цикла while на for
    //int i = 0 и i = i+1 попадают в заголовок цикла
    //и становятся слева и справа от условия соответсвенно

    for (int i = 0; i < n; i = i + 1)
    {
        cout << ai << endl;
        ai = ai + d;

    }


    return 0;
}


/*
 * Случай 5. вывод всех элементов меньших 50
 * В данном случае  "счетчик итераций" не используется
 * поэтому приводить цикл к виду for нецелесообразно
 */
int main()
{
    int a1 = 4;
    int d = 3;

    int ai;
    int max = 50;

    ai = a1;
    while (ai < max)
    {
        cout << ai << endl;
        ai = ai + d;
    }


    return 0;
}


/*
 * Случай 6. Бесконечный цикл, выход при помощи "break"
 */
int main()
{
    int a1 = 4;
    int d = 3;

    int ai;
    int max = 50;

    ai = a1;
    while (1)
    {
        cout << ai << endl;
        if(ai >= max)
            break;
        ai = ai + d;
    }


    return 0;
}
